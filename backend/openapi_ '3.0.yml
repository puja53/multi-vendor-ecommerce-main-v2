openapi: 3.0.0
info:
  title: E-commerce API
  version: 1.0.0
  description: API for e-commerce platform with marketplace functionality

servers:
  - url: http://localhost:3000/api/v1
    description: Development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string

    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        name:
          type: string
        role:
          type: string
          enum: [USER, ADMIN, SELLER]
        phone:
          type: string
        avatar:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Address:
      type: object
      properties:
        id:
          type: integer
        street:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        postalCode:
          type: string
        isDefault:
          type: boolean

    Shop:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        logo:
          type: string
        banner:
          type: string
        isVerified:
          type: boolean
        rating:
          type: number
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        price:
          type: number
        stock:
          type: integer
        images:
          type: array
          items:
            type: string
        isActive:
          type: boolean
        rating:
          type: number
        discount:
          type: number
        sku:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    CartItem:
      type: object
      properties:
        id:
          type: integer
        productId:
          type: integer
        quantity:
          type: integer
        product:
          $ref: "#/components/schemas/Product"

    Order:
      type: object
      properties:
        id:
          type: integer
        status:
          type: string
          enum: [PENDING, PROCESSING, SHIPPED, DELIVERED, CANCELLED, REFUNDED]
        paymentStatus:
          type: string
          enum: [PENDING, COMPLETED, FAILED, REFUNDED]
        paymentMethod:
          type: string
        total:
          type: number
        items:
          type: array
          items:
            $ref: "#/components/schemas/OrderItem"
        address:
          $ref: "#/components/schemas/Address"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    OrderItem:
      type: object
      properties:
        id:
          type: integer
        productId:
          type: integer
        quantity:
          type: integer
        price:
          type: number
        product:
          $ref: "#/components/schemas/Product"

    Review:
      type: object
      properties:
        id:
          type: integer
        rating:
          type: integer
        comment:
          type: string
        images:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        user:
          $ref: "#/components/schemas/User"
        product:
          $ref: "#/components/schemas/Product"

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - name
              properties:
                email:
                  type: string
                password:
                  type: string
                name:
                  type: string
                phone:
                  type: string
      responses:
        "201":
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"

  /users/profile:
    get:
      tags:
        - Users
      summary: Get user profile
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

  /users/addresses:
    get:
      tags:
        - Addresses
      summary: Get user addresses
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Addresses retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Address"

    post:
      tags:
        - Addresses
      summary: Add new address
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Address"
      responses:
        "201":
          description: Address added successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Address"

  /shops:
    post:
      tags:
        - Shops
      summary: Create a new shop
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                description:
                  type: string
                logo:
                  type: string
                banner:
                  type: string
      responses:
        "201":
          description: Shop created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shop"

    get:
      tags:
        - Shops
      summary: List all shops
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
          description: Items per page
      responses:
        "200":
          description: List of shops
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Shop"
                  total:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer

  /products:
    post:
      tags:
        - Products
      summary: Create a new product
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - price
                - categoryId
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                categoryId:
                  type: integer
                stock:
                  type: integer
                images:
                  type: array
                  items:
                    type: string
                discount:
                  type: number
                sku:
                  type: string
      responses:
        "201":
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"

    get:
      tags:
        - Products
      summary: List all products
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: categoryId
          schema:
            type: integer
        - in: query
          name: shopId
          schema:
            type: integer
        - in: query
          name: minPrice
          schema:
            type: number
        - in: query
          name: maxPrice
          schema:
            type: number
      responses:
        "200":
          description: List of products
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
                  total:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer

  /cart:
    get:
      tags:
        - Cart
      summary: Get user's cart
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Cart retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/CartItem"
                  total:
                    type: number

    post:
      tags:
        - Cart
      summary: Add item to cart
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - productId
                - quantity
              properties:
                productId:
                  type: integer
                quantity:
                  type: integer
      responses:
        "200":
          description: Item added to cart successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartItem"

  /orders:
    post:
      tags:
        - Orders
      summary: Create a new order
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - addressId
                - paymentMethod
              properties:
                addressId:
                  type: integer
                paymentMethod:
                  type: string
      responses:
        "201":
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"

    get:
      tags:
        - Orders
      summary: List user orders
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: status
          schema:
            type: string
            enum: [PENDING, PROCESSING, SHIPPED, DELIVERED, CANCELLED, REFUNDED]
      responses:
        "200":
          description: List of orders
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Order"
                  total:
                    type: integer
                  page:
                    type: integer
                  totalPages:
                    type: integer

  /reviews:
    post:
      tags:
        - Reviews
      summary: Create a product review
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - productId
                - shopId
                - rating
              properties:
                productId:
                  type: integer
                shopId:
                  type: integer
                rating:
                  type: integer
                comment:
                  type: string
                images:
                  type: array
                  items:
                    type: string
      responses:
        "201":
          description: Review created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Review"
